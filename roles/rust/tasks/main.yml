- include: "{{ ansible_os_family | lower }}.yml"

- name: Install rustup
  shell: "curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path  -y --default-toolchain nightly -v"
  register: rustup_output
  args:
    creates: ~/.cargo/env
- debug: var=rustup_output

- name: Check last toolchain update
  # If file does not exists it returs true otherwise it executes the find
  shell: 'test ! -f ~/.cargo/last_toolchain_check || test -n "$(find ~/.cargo -maxdepth 1 -iname last_toolchain_check -cmin +12)"'
  register: last_toolchain_check
  ignore_errors: true
- debug: var=last_toolchain_check

- name: Update rustup
  command: "~/.cargo/bin/rustup self update"
  when: last_toolchain_check is success

- name: Install/update toolchains
  command: "~/.cargo/bin/rustup toolchain add {{ item }}"
  with_items:
    - stable
    - nightly
  register: toolchains_output
  when: last_toolchain_check is success
  ignore_errors: true
- debug: var=toolchains_output

- name: Install rust utils
  command: "~/.cargo/bin/cargo +nightly install {{ item.pkg }}"
  args:
    creates: "~/.cargo/bin/{{ item.bin }}"
  when: rust_binaries
  with_items:
    - "{{ rust_binaries }}"

- name: Update installed binaries
  command: "~/.cargo/bin/cargo +nightly install-update -a"
  register: updates_output
  when: last_toolchain_check is success
  ignore_errors: true
- debug: var=updates_output

- name: Install components
  shell: "~/.cargo/bin/rustup component add {{ item }}"
  register: components_output
  when: rust_components | bool
  with_items:
    - "{{ rust_components }}"
  tags: rust-components
- debug: var=components_output

- name: Touch last_toolchain_check file to avoid upgrading again
  file: path="~/.cargo/last_toolchain_check" state=touch
  when: last_toolchain_check is success
